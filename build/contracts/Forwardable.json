{
  "contractName": "Forwardable",
  "abi": [],
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a72305820575c2ddd8d9764f9fecd8cd86e39c2981a4bc827ef369b899021f18231cc4d070029",
  "deployedBytecode": "0x6080604052600080fd00a165627a7a72305820575c2ddd8d9764f9fecd8cd86e39c2981a4bc827ef369b899021f18231cc4d070029",
  "sourceMap": "222:604:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;222:604:17;;;;;;;",
  "deployedSourceMap": "222:604:17:-;;;;;",
  "source": "pragma solidity 0.4.24;\n\n\n/**\n * @title Forwardable\n * @dev Contract that's responsible for delegating calls\n * @notice used ideas and info from: https://medium.com/limechain/smart-contract-upgradeability-ee3d43dde96c\n */\ncontract Forwardable {\n\t/**\n\t* @dev does a delegatecall & returns what the delegatecall returned (entire context execution is returned)\n\t* @param _dst destination address to do the delegatecall\n\t*/\n\tfunction delegatedFwd(address _dst) internal {\n\t\t/* solium-disable-next-line security/no-inline-assembly */\n\t\tassembly {\n\t\t\tlet ptr := mload(0x40)\n\t\t\tcalldatacopy(ptr, 0, calldatasize)\n\n\t\t\tlet result := delegatecall(gas, _dst, ptr, calldatasize, 0, 0)\n\n\t\t\tlet size := returndatasize\n\t\t\treturndatacopy(ptr, 0, size)\n\n\t\t\tswitch result\n\t\t\t\tcase 0 {revert(ptr, size)}\n\t\t\t\tdefault {return (ptr, size)}\n\t\t}\n\t}\n}\n",
  "sourcePath": "C:\\Users\\Trevor\\documents\\marketplace2\\Consensys-Marketplace-Final-Project-master\\contracts\\upgrades\\Forwardable.sol",
  "ast": {
    "absolutePath": "/C/Users/Trevor/documents/marketplace2/Consensys-Marketplace-Final-Project-master/contracts/upgrades/Forwardable.sol",
    "exportedSymbols": {
      "Forwardable": [
        1862
      ]
    },
    "id": 1863,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1854,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Forwardable\n@dev Contract that's responsible for delegating calls\n@notice used ideas and info from: https://medium.com/limechain/smart-contract-upgradeability-ee3d43dde96c",
        "fullyImplemented": true,
        "id": 1862,
        "linearizedBaseContracts": [
          1862
        ],
        "name": "Forwardable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1860,
              "nodeType": "Block",
              "src": "466:358:17",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "_dst": {
                        "declaration": 1856,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "642:4:17",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1859,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), _dst, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "531:293:17"
                }
              ]
            },
            "documentation": "@dev does a delegatecall & returns what the delegatecall returned (entire context execution is returned)\n@param _dst destination address to do the delegatecall",
            "id": 1861,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "delegatedFwd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "name": "_dst",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "443:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "442:14:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 1858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:17"
            },
            "scope": 1862,
            "src": "421:403:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1863,
        "src": "222:604:17"
      }
    ],
    "src": "0:827:17"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Trevor/documents/marketplace2/Consensys-Marketplace-Final-Project-master/contracts/upgrades/Forwardable.sol",
    "exportedSymbols": {
      "Forwardable": [
        1862
      ]
    },
    "id": 1863,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1854,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Forwardable\n@dev Contract that's responsible for delegating calls\n@notice used ideas and info from: https://medium.com/limechain/smart-contract-upgradeability-ee3d43dde96c",
        "fullyImplemented": true,
        "id": 1862,
        "linearizedBaseContracts": [
          1862
        ],
        "name": "Forwardable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1860,
              "nodeType": "Block",
              "src": "466:358:17",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "_dst": {
                        "declaration": 1856,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "642:4:17",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1859,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), _dst, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "531:293:17"
                }
              ]
            },
            "documentation": "@dev does a delegatecall & returns what the delegatecall returned (entire context execution is returned)\n@param _dst destination address to do the delegatecall",
            "id": 1861,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "delegatedFwd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "name": "_dst",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "443:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "442:14:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 1858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:17"
            },
            "scope": 1862,
            "src": "421:403:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1863,
        "src": "222:604:17"
      }
    ],
    "src": "0:827:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-24T18:58:43.101Z",
  "devdoc": {
    "methods": {},
    "title": "Forwardable"
  },
  "userdoc": {
    "methods": {}
  }
}