{
  "contractName": "Paused",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ownerCandidate",
          "type": "address"
        },
        {
          "name": "_storeIndex",
          "type": "uint256"
        }
      ],
      "name": "requestOwnershipTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownerCandidate",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketplace",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newStoreIndex",
          "type": "uint16"
        }
      ],
      "name": "approveOwnershipTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "storeIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogPause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogUnpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "currentOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "ownerCandidate",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "storeIndex",
          "type": "uint256"
        }
      ],
      "name": "LogOwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "LogOwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600460006101000a81548160ff02191690831515021790555034801561002b57600080fd5b50610a708061003b6000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632236ab5a1461009e5780633f4ba83a146100eb5780635c975abb146101025780635f504a82146101315780638456cb59146101885780638da5cb5b1461019f578063abc8c7af146101f6578063b21252b71461024d578063baa66e641461027e575b600080fd5b3480156100aa57600080fd5b506100e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102a9565b005b3480156100f757600080fd5b5061010061043f565b005b34801561010e57600080fd5b5061011761054c565b604051808215151515815260200191505060405180910390f35b34801561013d57600080fd5b5061014661055f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019457600080fd5b5061019d610585565b005b3480156101ab57600080fd5b506101b4610692565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020257600080fd5b5061020b6106b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025957600080fd5b5061027c600480360381019080803561ffff1690602001909291905050506106dd565b005b34801561028a57600080fd5b50610293610a3e565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546865206d73672073656e646572206d75737420626520746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff4872fb89759e1cbf4e640b0d9c91adaf6397241fa58a8023bb11177cbb67356836040518082815260200191505060405180910390a381600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546865206d73672073656e646572206d75737420626520746865206f776e657281525060200191505060405180910390fd5b7f730c1faaa977b67dacf1e2451ef54556e04a07d577785ff79f6d31f73502efc960405160405180910390a16000600460006101000a81548160ff021916908315150217905550565b600460009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610649576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546865206d73672073656e646572206d75737420626520746865206f776e657281525060200191505060405180910390fd5b7f4b314b34e912fda7f95e7d23e9c8c95f82f0aff1984e4ce592a0b005f905562460405160405180910390a16001600460006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f546865206d73672073656e646572206d75737420626520746865206f776e657281526020017f2063616e6469646174650000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fdb6d05f3295cede580affa301a1eb5297528f3b3f6a56b075887ce6f61c45f2160405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663cdc01ca36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600354600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018461ffff1661ffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff1661ffff168152602001945050505050600060405180830381600087803b1580156109c057600080fd5b505af11580156109d4573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600354815600a165627a7a723058208da05763a7d73c6a36c5e1477698430bf36fd39eb4dd16dab6de1a803de2e4f40029",
  "deployedBytecode": "0x608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632236ab5a1461009e5780633f4ba83a146100eb5780635c975abb146101025780635f504a82146101315780638456cb59146101885780638da5cb5b1461019f578063abc8c7af146101f6578063b21252b71461024d578063baa66e641461027e575b600080fd5b3480156100aa57600080fd5b506100e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102a9565b005b3480156100f757600080fd5b5061010061043f565b005b34801561010e57600080fd5b5061011761054c565b604051808215151515815260200191505060405180910390f35b34801561013d57600080fd5b5061014661055f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019457600080fd5b5061019d610585565b005b3480156101ab57600080fd5b506101b4610692565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020257600080fd5b5061020b6106b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025957600080fd5b5061027c600480360381019080803561ffff1690602001909291905050506106dd565b005b34801561028a57600080fd5b50610293610a3e565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546865206d73672073656e646572206d75737420626520746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff4872fb89759e1cbf4e640b0d9c91adaf6397241fa58a8023bb11177cbb67356836040518082815260200191505060405180910390a381600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546865206d73672073656e646572206d75737420626520746865206f776e657281525060200191505060405180910390fd5b7f730c1faaa977b67dacf1e2451ef54556e04a07d577785ff79f6d31f73502efc960405160405180910390a16000600460006101000a81548160ff021916908315150217905550565b600460009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610649576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546865206d73672073656e646572206d75737420626520746865206f776e657281525060200191505060405180910390fd5b7f4b314b34e912fda7f95e7d23e9c8c95f82f0aff1984e4ce592a0b005f905562460405160405180910390a16001600460006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f546865206d73672073656e646572206d75737420626520746865206f776e657281526020017f2063616e6469646174650000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fdb6d05f3295cede580affa301a1eb5297528f3b3f6a56b075887ce6f61c45f2160405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663cdc01ca36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600354600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018461ffff1661ffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff1661ffff168152602001945050505050600060405180830381600087803b1580156109c057600080fd5b505af11580156109d4573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600354815600a165627a7a723058208da05763a7d73c6a36c5e1477698430bf36fd39eb4dd16dab6de1a803de2e4f40029",
  "sourceMap": "171:588:4:-;;;264:5;243:26;;;;;;;;;;;;;;;;;;;;171:588;8:9:-1;5:2;;;30:1;27;20:12;5:2;171:588:4;;;;;;;",
  "deployedSourceMap": "171:588:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2112:240:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2112:240:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:79:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;678:79:4;;;;;;243:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;807:29:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;807:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;528:74:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;528:74:4;;;;;;753:20:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;753:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;776:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;776:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:303;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2541:303:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;839:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;839:25:12;;;;;;;;;;;;;;;;;;;;;;;2112:240;994:5;;;;;;;;;;;980:19;;:10;:19;;;972:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2255:15;2218:66;;2248:5;;;;;;;;;;;2218:66;;;2272:11;2218:66;;;;;;;;;;;;;;;;;;2305:15;2288:14;;:32;;;;;;;;;;;;;;;;;;2337:11;2324:10;:24;;;;2112:240;;:::o;678:79:4:-;994:5:12;;;;;;;;;;;980:19;;:10;:19;;;972:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:12:4;;;;;;;;;;748:5;739:6;;:14;;;;;;;;;;;;;;;;;;678:79::o;243:26::-;;;;;;;;;;;;;:::o;807:29:12:-;;;;;;;;;;;;;:::o;528:74:4:-;994:5:12;;;;;;;;;;;980:19;;:10;:19;;;972:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:10:4;;;;;;;;;;594:4;585:6;;:13;;;;;;;;;;;;;;;;;;528:74::o;753:20:12:-;;;;;;;;;;;;;:::o;776:26::-;;;;;;;;;;;;;:::o;2541:303::-;2684:14;1185;;;;;;;;;;;1171:28;;:10;:28;;;1163:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2664:14;;;;;;;;;;;2633:46;;2657:5;;;;;;;;;;;2633:46;;;;;;;;;;;;2714:11;;;;;;;;;;;2684:42;;2730:1;:24;;;2755:5;;;;;;;;;;;2769:10;;2782:14;;;;;;;;;;;2798;2730:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2730:83:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2730:83:12;;;;2826:14;;;;;;;;;;;2818:5;;:22;;;;;;;;;;;;;;;;;;2541:303;;:::o;839:25::-;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport '../owners/StoreOwn.sol';\n\n\n/**\n * @title Paused\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Paused is StoreOwn {\n\tevent LogPause();\n\tevent LogUnpause();\n\n\tbool public paused = false;\n\n\t/**\n\t* @dev Modifier to make a function callable only when the contract is not paused.\n\t*/\n\tmodifier whenNotPaused() {\n\t\trequire(!paused, 'The contract must not be paused!');\n\t\t_;\n\t}\n\n\t/**\n\t* @dev called by the owner to pause, triggers stopped state\n\t*/\n\tfunction pause() public onlyOwner {\n\t\temit LogPause();\n\t\tpaused = true;\n\t}\n\n\t/**\n\t* @dev called by the owner to unpause, returns to normal state\n\t*/\n\tfunction unpause() public onlyOwner {\n\t\temit LogUnpause();\n\t\tpaused = false;\n\t}\n}\n",
  "sourcePath": "C:\\Users\\Trevor\\documents\\marketplace2\\Consensys-Marketplace-Final-Project-master\\contracts\\Process\\Paused.sol",
  "ast": {
    "absolutePath": "/C/Users/Trevor/documents/marketplace2/Consensys-Marketplace-Final-Project-master/contracts/Process/Paused.sol",
    "exportedSymbols": {
      "Paused": [
        746
      ]
    },
    "id": 747,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 699,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/C/Users/Trevor/documents/marketplace2/Consensys-Marketplace-Final-Project-master/contracts/owners/StoreOwn.sol",
        "file": "../owners/StoreOwn.sol",
        "id": 700,
        "nodeType": "ImportDirective",
        "scope": 747,
        "sourceUnit": 1231,
        "src": "25:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 701,
              "name": "StoreOwn",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1230,
              "src": "190:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StoreOwn_$1230",
                "typeString": "contract StoreOwn"
              }
            },
            "id": 702,
            "nodeType": "InheritanceSpecifier",
            "src": "190:8:4"
          }
        ],
        "contractDependencies": [
          1230
        ],
        "contractKind": "contract",
        "documentation": "@title Paused\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 746,
        "linearizedBaseContracts": [
          746,
          1230
        ],
        "name": "Paused",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 704,
            "name": "LogPause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "216:2:4"
            },
            "src": "202:17:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 706,
            "name": "LogUnpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:4"
            },
            "src": "221:19:4"
          },
          {
            "constant": false,
            "id": 709,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 746,
            "src": "243:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 707,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "243:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 708,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "264:5:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "390:65:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "402:7:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 712,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 709,
                          "src": "403:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520636f6e7472616374206d757374206e6f742062652070617573656421",
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "411:34:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac065e8976c7b45c4470b64d61e40dda0c3192c6427f27fdb034aaa2f4b903c9",
                          "typeString": "literal_string \"The contract must not be paused!\""
                        },
                        "value": "The contract must not be paused!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac065e8976c7b45c4470b64d61e40dda0c3192c6427f27fdb034aaa2f4b903c9",
                          "typeString": "literal_string \"The contract must not be paused!\""
                        }
                      ],
                      "id": 711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1950,
                        1951
                      ],
                      "referencedDeclaration": 1951,
                      "src": "394:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "394:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "394:52:4"
                },
                {
                  "id": 717,
                  "nodeType": "PlaceholderStatement",
                  "src": "450:1:4"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 719,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:2:4"
            },
            "src": "365:90:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "562:40:4",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 724,
                      "name": "LogPause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "571:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "571:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "EmitStatement",
                  "src": "566:15:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 727,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "585:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "594:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "585:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "585:13:4"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 732,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 722,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 721,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "552:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "552:9:4"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:0:4"
            },
            "scope": 746,
            "src": "528:74:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "714:43:4",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 737,
                      "name": "LogUnpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "723:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "EmitStatement",
                  "src": "718:17:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 740,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "739:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "748:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "739:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "739:14:4"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 745,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 735,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 734,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "704:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "704:9:4"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:4"
            },
            "scope": 746,
            "src": "678:79:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 747,
        "src": "171:588:4"
      }
    ],
    "src": "0:760:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Trevor/documents/marketplace2/Consensys-Marketplace-Final-Project-master/contracts/Process/Paused.sol",
    "exportedSymbols": {
      "Paused": [
        746
      ]
    },
    "id": 747,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 699,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/C/Users/Trevor/documents/marketplace2/Consensys-Marketplace-Final-Project-master/contracts/owners/StoreOwn.sol",
        "file": "../owners/StoreOwn.sol",
        "id": 700,
        "nodeType": "ImportDirective",
        "scope": 747,
        "sourceUnit": 1231,
        "src": "25:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 701,
              "name": "StoreOwn",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1230,
              "src": "190:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StoreOwn_$1230",
                "typeString": "contract StoreOwn"
              }
            },
            "id": 702,
            "nodeType": "InheritanceSpecifier",
            "src": "190:8:4"
          }
        ],
        "contractDependencies": [
          1230
        ],
        "contractKind": "contract",
        "documentation": "@title Paused\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 746,
        "linearizedBaseContracts": [
          746,
          1230
        ],
        "name": "Paused",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 704,
            "name": "LogPause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "216:2:4"
            },
            "src": "202:17:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 706,
            "name": "LogUnpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:4"
            },
            "src": "221:19:4"
          },
          {
            "constant": false,
            "id": 709,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 746,
            "src": "243:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 707,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "243:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 708,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "264:5:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "390:65:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "402:7:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 712,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 709,
                          "src": "403:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520636f6e7472616374206d757374206e6f742062652070617573656421",
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "411:34:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac065e8976c7b45c4470b64d61e40dda0c3192c6427f27fdb034aaa2f4b903c9",
                          "typeString": "literal_string \"The contract must not be paused!\""
                        },
                        "value": "The contract must not be paused!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac065e8976c7b45c4470b64d61e40dda0c3192c6427f27fdb034aaa2f4b903c9",
                          "typeString": "literal_string \"The contract must not be paused!\""
                        }
                      ],
                      "id": 711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1950,
                        1951
                      ],
                      "referencedDeclaration": 1951,
                      "src": "394:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "394:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "394:52:4"
                },
                {
                  "id": 717,
                  "nodeType": "PlaceholderStatement",
                  "src": "450:1:4"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 719,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:2:4"
            },
            "src": "365:90:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "562:40:4",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 724,
                      "name": "LogPause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "571:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "571:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "EmitStatement",
                  "src": "566:15:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 727,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "585:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "594:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "585:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "585:13:4"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 732,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 722,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 721,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "552:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "552:9:4"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:0:4"
            },
            "scope": 746,
            "src": "528:74:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "714:43:4",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 737,
                      "name": "LogUnpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "723:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "EmitStatement",
                  "src": "718:17:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 740,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "739:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "748:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "739:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "739:14:4"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 745,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 735,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 734,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "704:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "704:9:4"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:4"
            },
            "scope": 746,
            "src": "678:79:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 747,
        "src": "171:588:4"
      }
    ],
    "src": "0:760:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-24T18:58:43.136Z",
  "devdoc": {
    "methods": {
      "approveOwnershipTransfer(uint16)": {
        "details": "Allows owner candidate to approve the ownership of the contract.",
        "params": {
          "_newStoreIndex": "The index at which the new store to be set in the new owner's stores array."
        }
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "requestOwnershipTransfer(address,uint256)": {
        "details": "Allows the current owner to transfer control of the contract to a new owner, who has to approve the ownership.",
        "params": {
          "_ownerCandidate": "The address to transfer ownership to.",
          "_storeIndex": "The index of the current store to be transferred."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "title": "Paused"
  },
  "userdoc": {
    "methods": {
      "requestOwnershipTransfer(address,uint256)": {
        "notice": "The requirement for non-zero address of the `_ownerCandidate` is intentionally omitted due to the two-staged implementation."
      }
    }
  }
}